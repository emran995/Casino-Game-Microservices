stages:
  - smoke
  - test
  - kafka
  - security

variables:
  PYTHONPATH: "${CI_PROJECT_DIR}"

.default_python_job:
  image: python:3.10
  before_script:
    - pip install -r requirements.txt || pip install pytest requests
  only:
    - merge_requests
    - main

smoke_test:
  extends: .default_python_job
  stage: smoke
  script:
    - pytest tests/test_health_check.py -v

main_tests:
  extends: .default_python_job
  stage: test
  script:
    - pytest tests/test_true_cases.py tests/test_false_cases.py tests/test_edge_case.py -v --maxfail=1 --tb=short

kafka_tests:
  image: python:3.10
  stage: kafka
  services:
    - name: bitnami/kafka:latest
      alias: kafka
  variables:
    KAFKA_ENABLE_KRAFT: "yes"
    KAFKA_CFG_PROCESS_ROLES: "controller,broker"
    KAFKA_CFG_NODE_ID: "1"
    KAFKA_CFG_CONTROLLER_QUORUM_VOTERS: "1@kafka:9093"
    KAFKA_CFG_CONTROLLER_LISTENER_NAMES: "CONTROLLER"
    KAFKA_CFG_LISTENERS: "INTERNAL://:9092,CONTROLLER://:9093"
    KAFKA_CFG_ADVERTISED_LISTENERS: "INTERNAL://kafka:9092"
    KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP: "CONTROLLER:PLAINTEXT,INTERNAL:PLAINTEXT"
    KAFKA_KRAFT_CLUSTER_ID: "r123456clusterid"
  before_script:
    - apt-get update && apt-get install -y netcat
    - pip install -r requirements.txt

  script:
    - echo "Waiting for Kafka to be ready on kafka:9092..."
    - for i in {1..20}; do nc -z kafka 9092 && echo "Kafka is UP" && break || echo "Kafka not ready, waiting..." && sleep 3; done
    - python kafka_consumer.py &
    - sleep 5
    - python kafka_producer.py
  
  artifacts:
    paths:
      - results/
    when: always



security_check:
  extends: .default_python_job
  stage: security
  script:
    - pytest tests/test_security.py -v
